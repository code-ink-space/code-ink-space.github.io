{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/Subline.js","webpack:///./config/index.js","webpack:///./src/components/Article.js","webpack:///./src/components/Button.js","webpack:///./src/components/Header.js","webpack:///./src/components/SEO.js","webpack:///./config/theme.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/Wrapper.js","webpack:///./src/components/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components__WEBPACK_IMPORTED_MODULE_4__","_config__WEBPACK_IMPORTED_MODULE_5__","_config__WEBPACK_IMPORTED_MODULE_5___default","Content","styled","div","withConfig","displayName","componentId","props","theme","colors","bg","breakpoints","tablet","phone","Contact","a","createElement","title","config","siteTitle","to","name","method","data-netlify","data-netlify-honeypot","action","htmlFor","id","type","required","value","Subline","fontSize","small","grey","light","sectionTitle","module","exports","pathPrefix","siteTitleAlt","siteTitleManifest","siteUrl","siteLanguage","siteHeadline","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","googleAnalyticsID","themeColor","backgroundColor","Post","article","Title","h2","dark","primaryLight","Initiale","span","PostContent","p","Article","_ref","date","body","slug","excerpt","categories","timeToRead","issue","firstChar","charAt","react_default","gatsby_browser_entry","map","cat","i","Fragment","key","kebabCase","mdx_renderer_default","propTypes","PropTypes","string","isRequired","number","array","Button","button","primary","big","white","transitions","normal","Wrapper","header","darken","lighten","maxWidth","Header","children","oneOfType","node","SEO","description","postNode","postPath","buildTime","realPrefix","homeURL","URL","image","frontmatter","schemaOrgWebPage","@context","@type","url","headline","inLanguage","mainEntityOfPage","copyrightHolder","copyrightYear","creator","publisher","datePublished","dateModified","itemListElement","item","@id","position","schemaArticle","parent","birthtime","logo","mtime","push","breadcrumb","Helmet_default","lang","content","property","siteFBAppID","JSON","stringify","object","bool","defaultProps","default","ultraLight","fontFamily","serif","sansSerif","baseFontSize","GlobalStyle","createGlobalStyle","_templateObject","color","Footer","footer","Layout","customSEO","query","render","data","styled_components_browser_esm","components_SEO","site","href","_1916622149","Prev","Next","PrevNext","next","prev","PrevNext_Wrapper","PrevNext_Content","fields","SectionTitle","d","components_Article","components_Button","components_Header","components_Layout","components_PrevNext","components_SectionTitle","components_Wrapper"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAAK,EAAAM,GAUME,EAAUC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,6XAKS,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,IAG3B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,QAGjC,SAAAL,GAAK,OAAIA,EAAMC,MAAMG,YAAYE,QA4DzCC,UArCC,kBACdtB,EAAAuB,EAAAC,cAAClB,EAAA,EAAD,KACEN,EAAAuB,EAAAC,cAAClB,EAAA,EAAD,KACEN,EAAAuB,EAAAC,cAACrB,EAAAoB,EAAD,CAAQE,MAAK,aAAeC,IAAOC,YACnC3B,EAAAuB,EAAAC,cAAClB,EAAA,EAAD,KACEN,EAAAuB,EAAAC,cAACpB,EAAA,KAAD,CAAMwB,GAAG,KAAKF,IAAOC,YAEvB3B,EAAAuB,EAAAC,cAACf,EAAD,KACET,EAAAuB,EAAAC,cAAA,qBACAxB,EAAAuB,EAAAC,cAAA,2BACAxB,EAAAuB,EAAAC,cAAA,QAAMK,KAAK,eAAeC,OAAO,OAAOC,eAAa,OAAOC,wBAAsB,YAAYC,OAAO,YACnGjC,EAAAuB,EAAAC,cAAA,SACExB,EAAAuB,EAAAC,cAAA,SAAOU,QAAQ,gBAAf,OAEElC,EAAAuB,EAAAC,cAAA,SAAOK,KAAK,OAAOM,GAAG,eAAeC,KAAK,OAAOC,UAAQ,MAG7DrC,EAAAuB,EAAAC,cAAA,SACExB,EAAAuB,EAAAC,cAAA,SAAOU,QAAQ,iBAAf,UACSlC,EAAAuB,EAAAC,cAAA,SAAOK,KAAK,QAAQM,GAAG,gBAAgBC,KAAK,QAAQC,UAAQ,MAGvErC,EAAAuB,EAAAC,cAAA,SACExB,EAAAuB,EAAAC,cAAA,SAAOU,QAAQ,mBAAf,gBACelC,EAAAuB,EAAAC,cAAA,YAAUK,KAAK,UAAUM,GAAG,kBAAkBE,UAAQ,MAGvErC,EAAAuB,EAAAC,cAAA,SACExB,EAAAuB,EAAAC,cAAClB,EAAA,EAAD,cAEFN,EAAAuB,EAAAC,cAAA,SAAOY,KAAK,SAASP,KAAK,YAAYS,MAAM,mECxEhDC,SAAU7B,EAAOC,IAAVC,WAAA,CAAAC,YAAA,UAAAC,YAAA,eAAGJ,CAAH,yCACE,SAAAK,GAAK,OAAIA,EAAMC,MAAMwB,SAASC,OAClC,SAAA1B,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAKC,OACxC,SAAA5B,GAAK,OAAIA,EAAM6B,cAAgB,iBAC/B,SAAA7B,GAAK,OAAIA,EAAM6B,cAAgB,uBAC/B,SAAA7B,GAAK,OAAIA,EAAM6B,cAAgB,uBAGpBL,yBCVfM,EAAOC,QAAU,CACfC,WAAY,IAEZpB,UAAW,0CACXqB,aAAc,0CACdC,kBAAmB,0CACnBC,QAAS,mCACTC,aAAc,KACdC,aAAc,kDACdC,WAAY,+CACZC,QAAS,iCACTC,gBAAiB,6DACjBC,OAAQ,UACRC,SAAU,kCAGVC,YAAa,gBACbC,WAAY,eACZC,WAAY,QACZC,kBAAmB,iBAInBC,WAAY,UACZC,gBAAiB,iNCfbC,EAAOtD,IAAOuD,QAAVrD,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,oQAQa,SAAAK,GAAK,OAAIA,EAAMC,MAAMG,YAAYE,QAQlD6C,EAAQxD,IAAOyD,GAAVvD,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,yIAKE,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAK0B,MAE/B,SAAArD,GAAK,OAAIA,EAAMC,MAAMC,OAAOoD,eAMrCC,EAAW5D,IAAO6D,KAAV3D,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,+GAeR8D,GANU9D,IAAO+D,EAAV7D,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,4DAMOA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,OAGXgE,EAAU,SAAAC,GAAyE,IAAtElD,EAAsEkD,EAAtElD,MAAOmD,EAA+DD,EAA/DC,KAAMC,EAAyDF,EAAzDE,KAAeC,GAA0CH,EAAnDI,QAAmDJ,EAA1CG,MAAkBE,GAAwBL,EAApCM,WAAoCN,EAAxBK,YAAYE,EAAYP,EAAZO,MACrEC,EAAY1D,EAAM2D,OAAO,GAE/B,OACEC,EAAA9D,EAAAC,cAACwC,EAAD,KACEqB,EAAA9D,EAAAC,cAAC0C,EAAD,KACEmB,EAAA9D,EAAAC,cAAC8C,EAAD,KAAWa,GACXE,EAAA9D,EAAAC,cAAC8D,EAAA,KAAD,CAAM1D,GAAIkD,GAAOrD,IAEnB4D,EAAA9D,EAAAC,cAACe,EAAA,EAAD,KACGqC,EADH,MACiBS,EAAA9D,EAAAC,cAAA,mBAAW0D,GAD5B,MAC0C,IACvCF,EAAWO,IAAI,SAACC,EAAKC,GAAN,OACdJ,EAAA9D,EAAAC,cAAC6D,EAAA9D,EAAMmE,SAAP,CAAgBC,IAAKH,KAChBC,GAAK,KACRJ,EAAA9D,EAAAC,cAAC8D,EAAA,KAAD,CAAM1D,GAAE,YAAcgE,IAAUJ,IAASA,OAI/CH,EAAA9D,EAAAC,cAACgD,EAAD,KACMa,EAAA9D,EAAAC,cAACqE,EAAAtE,EAAD,KAAcsD,MAMXH,IAEfA,EAAQoB,UAAY,CAClBrE,MAAOsE,IAAUC,OAAOC,WACxBrB,KAAMmB,IAAUC,OAAOC,WACvBlB,QAASgB,IAAUC,OAAOC,WAC1BnB,KAAMiB,IAAUC,OAAOC,WACvBhB,WAAYc,IAAUG,OAAOD,WAC7BjB,WAAYe,IAAUI,MAAMF,WAC5Bf,MAAOa,IAAUC,OAAOC,uBC7DXG,EA3BA1F,IAAO2F,OAAVzF,WAAA,CAAAC,YAAA,SAAAC,YAAA,YAAGJ,CAAH,sWACI,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOqF,SAIzB,SAAAvF,GAAK,OAAKA,EAAMwF,IAAM,SAAW,QACrC,SAAAxF,GAAK,OAAKA,EAAMwF,IAAM,SAAW,QACrC,SAAAxF,GAAK,OAAIA,EAAMC,MAAMC,OAAOuF,OAC1B,SAAAzF,GAAK,OAAKA,EAAMwF,IAAM,iBAAmB,mBAClC,SAAAxF,GAAK,OAAIA,EAAMC,MAAMyF,YAAYC,QAGnC,SAAA3F,GAAK,OAAIA,EAAMC,MAAMC,OAAOoD,cAWlC,SAAAtD,GAAK,OAAIA,EAAMC,MAAMC,OAAOuF,iBCpBlCG,EAAUjG,IAAOkG,OAAVhG,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,yLAGP,SAAAK,GAAK,OAAI8F,YAAO,GAAK9F,EAAMC,MAAMC,OAAOqF,UACxC,SAAAvF,GAAK,OAAI+F,YAAQ,GAAK/F,EAAMC,MAAMC,OAAOqF,WASzC7F,EAAUC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,+FACE,SAAAK,GAAK,OAAIA,EAAMC,MAAM+F,UAIvB,SAAAhG,GAAK,OAAIA,EAAMC,MAAMC,OAAOuF,OAI1B,SAAAzF,GAAK,OAAIA,EAAMC,MAAMC,OAAOuF,QAKrCQ,EAAS,SAAArC,GAAA,IAAGsC,EAAHtC,EAAGsC,SAAH,OACb5B,EAAA9D,EAAAC,cAACmF,EAAD,KACEtB,EAAA9D,EAAAC,cAACf,EAAD,KAAUwG,KAICD,IAEfA,EAAOlB,UAAY,CACjBmB,SAAUlB,IAAUmB,UAAU,CAACnB,IAAUI,MAAOJ,IAAUoB,OAAOlB,+ECnC7DmB,EAAM,SAAArG,GAAS,IAGfU,EACA4F,EAHIC,EAA2CvG,EAA3CuG,SAAUC,EAAiCxG,EAAjCwG,SAAUtD,EAAuBlD,EAAvBkD,QAASuD,EAAczG,EAAdyG,UAK/BC,EAAmC,MAAtB/F,IAAOqB,WAAqB,GAAKrB,IAAOqB,WACrD2E,EAAO,GAAMhG,IAAOwB,QAAUuE,EAC9BE,EAAG,GAAMD,GAAUH,GAAY,IAC/BK,EAAK,GAAMF,EAAUhG,IAAO2B,WAE9BY,GAEFxC,EADiB6F,EAASO,YACNpG,MAAf,MAA0BC,IAAOC,UACtC0F,EAAcC,EAASvC,UAEvBtD,EAAQC,IAAOsB,aACfqE,EAAc3F,IAAO6B,iBAOvB,IAAMuE,EAAmB,CACvBC,WAAY,oBACZC,QAAS,UACTC,IAAKN,EACLO,SAAUxG,IAAO0B,aACjB+E,WAAYzG,IAAOyB,aACnBiF,iBAAkBT,EAClBN,YAAa3F,IAAO6B,gBACpB1B,KAAMH,IAAOC,UACb6B,OAAQ,CACNwE,QAAS,SACTnG,KAAMH,IAAO8B,QAEf6E,gBAAiB,CACfL,QAAS,SACTnG,KAAMH,IAAO8B,QAEf8E,cAAe,OACfC,QAAS,CACPP,QAAS,SACTnG,KAAMH,IAAO8B,QAEfgF,UAAW,CACTR,QAAS,SACTnG,KAAMH,IAAO8B,QAEfiF,cAAe,4BACfC,aAAclB,EACdI,MAAO,CACLI,QAAS,cACTC,IAAKL,IAMHe,EAAkB,CACtB,CACEX,QAAS,WACTY,KAAM,CACJC,MAAOnB,EACP7F,KAAM,YAERiH,SAAU,GAEZ,CACEd,QAAS,WACTY,KAAM,CACJC,MAAUnB,EAAV,WACA7F,KAAM,WAERiH,SAAU,IAIVC,EAAgB,KAEhB9E,IACF8E,EAAgB,CACdhB,WAAY,oBACZC,QAAS,UACTxE,OAAQ,CACNwE,QAAS,SACTnG,KAAMH,IAAO8B,QAEf6E,gBAAiB,CACfL,QAAS,SACTnG,KAAMH,IAAO8B,QAEf8E,cAAehB,EAAS0B,OAAOC,UAC/BV,QAAS,CACPP,QAAS,SACTnG,KAAMH,IAAO8B,QAEfgF,UAAW,CACTR,QAAS,eACTnG,KAAMH,IAAO8B,OACb0F,KAAM,CACJlB,QAAS,cACTC,IAAG,GAAKP,EAAUhG,IAAO+B,WAG7BgF,cAAenB,EAAS0B,OAAOC,UAC/BP,aAAcpB,EAAS0B,OAAOG,MAC9B9B,cACAa,SAAUzG,EACV0G,WAAY,KACZF,IAAKN,EACL9F,KAAMJ,EACNmG,MAAO,CACLI,QAAS,cACTC,IAAKL,GAEPQ,iBAAkBT,GAGpBgB,EAAgBS,KAAK,CACnBpB,QAAS,WACTY,KAAM,CACJC,MAAOlB,EACP9F,KAAMJ,GAERqH,SAAU,KAId,IAAMO,EAAa,CACjBtB,WAAY,oBACZC,QAAS,iBACTX,YAAa,mBACbxF,KAAM,cACN8G,mBAGF,OACEtD,EAAA9D,EAAAC,cAAC8H,EAAA/H,EAAD,KACE8D,EAAA9D,EAAAC,cAAA,QAAM+H,KAAM7H,IAAOyB,eACnBkC,EAAA9D,EAAAC,cAAA,aAAQC,GACR4D,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,cAAc2H,QAASnC,IAClChC,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,QAAQ2H,QAAS5B,IAC5BvC,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,iBAAiB2H,QAAQ,gCACpCnE,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,YAAYD,QAAS9H,IAAOkC,aAC3CyB,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,eAAeD,QAAS9H,IAAOiC,WAAajC,IAAOiC,WAAa,KAC/E0B,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,SAASD,QAAS7B,IACjCtC,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,UAAUD,QAASvF,EAAU,UAAY,YACxDoB,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,WAAWD,QAAS/H,IACnC4D,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,iBAAiBD,QAASnC,IACzChC,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,WAAWD,QAAS5B,IACnCvC,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,eAAeD,QAASnC,IACtC3F,IAAOgI,aAAerE,EAAA9D,EAAAC,cAAA,QAAMiI,SAAS,YAAYD,QAAS9H,IAAOgI,cAClErE,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,eAAe2H,QAAQ,wBAClCnE,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,kBAAkB2H,QAAS9H,IAAOgC,YAAchC,IAAOgC,YAAc,KAChF2B,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,gBAAgB2H,QAAS/H,IACpC4D,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,cAAc2H,QAAS9H,IAAOwB,UACzCmC,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,sBAAsB2H,QAASnC,IAC1ChC,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,gBAAgB2H,QAAS5B,IACpCvC,EAAA9D,EAAAC,cAAA,QAAMK,KAAK,oBAAoB2H,QAASnC,KAEtCpD,GAAWoB,EAAA9D,EAAAC,cAAA,UAAQY,KAAK,uBAAuBuH,KAAKC,UAAU9B,IAC/D7D,GAAWoB,EAAA9D,EAAAC,cAAA,UAAQY,KAAK,uBAAuBuH,KAAKC,UAAUb,IAC/D1D,EAAA9D,EAAAC,cAAA,UAAQY,KAAK,uBAAuBuH,KAAKC,UAAUP,MAK1CjC,IAEfA,EAAItB,UAAY,CACdwB,SAAUvB,IAAU8D,OACpBtC,SAAUxB,IAAUC,OACpB/B,QAAS8B,IAAU+D,KACnBtC,UAAWzB,IAAUC,QAGvBoB,EAAI2C,aAAe,CACjBzC,SAAU,KACVC,SAAU,KACVtD,SAAS,EACTuD,UAAW,MC1Lb,IA2CexG,EAVD,CACZC,OAlCa,CAEbqF,QAAS,UACTjC,aAAcyC,YAAQ,IAAM,WAE5B5F,GAAI,UACJwB,KAAM,CACJ0B,KAAM,qBACN4F,QAAS,qBACTrH,MAAO,qBACPsH,WAAY,uBAEdzD,MAAO,SAuBPC,YApBkB,CAClBC,OAAQ,QAoBRlE,SAjBe,CACfC,MAAO,UAiBPtB,YATkB,CAClBC,OAAQ,SACRC,MAAO,SAQP6I,WAfiB,CACjBC,MAAK,iGACLC,UAAS,0GAcTrD,SAAU,SACVsD,aAAc,gsGClChB,IAAMC,EAAcC,YAAHC,IAYJ,SAAAzJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,IACvB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOqF,SAG3B,SAAAvF,GAAK,OAAIA,EAAMC,MAAMkJ,WAAWE,WAClC,SAAArJ,GAAK,OAAIA,EAAMC,MAAMqJ,cAgBb,SAAAtJ,GAAK,OAAIA,EAAMC,MAAMG,YAAYE,OAoBxC,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,IACjC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAKsH,SAGjC,SAAAjJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOqF,SAEnB,SAAAvF,GAAK,OAAIA,EAAMC,MAAMyF,YAAYC,QAI1C,SAAA3F,GAAK,OAAIA,EAAMC,MAAMC,OAAOoD,cAkB5B,SAAAtD,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAK0B,MAC3B,SAAArD,GAAK,OAAIA,EAAMC,MAAMkJ,WAAWC,OAUjC,SAAApJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOqF,SAOjC,SAAAvF,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAK0B,MAM3B,SAAArD,GAAK,OAAIA,EAAMC,MAAMkJ,WAAWE,WAsC3B,SAAArJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,IAKvC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOwJ,QAkDnCC,EAAShK,IAAOiK,OAAV/J,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,kEAQNkK,EAAS,SAAAjG,GAAA,IAAGsC,EAAHtC,EAAGsC,SAAU4D,EAAblG,EAAakG,UAAb,OACbxF,EAAA9D,EAAAC,cAAC8D,EAAA,YAAD,CACEwF,MAAK,aAOLC,OAAQ,SAAAC,GAAI,OACV3F,EAAA9D,EAAAC,cAACyJ,EAAA,EAAD,CAAejK,MAAOA,GACpBqE,EAAA9D,EAAAC,cAAC6D,EAAA9D,EAAMmE,SAAP,MACImF,GAAaxF,EAAA9D,EAAAC,cAAC0J,EAAD,CAAK1D,UAAWwD,EAAKG,KAAK3D,YACzCnC,EAAA9D,EAAAC,cAAC8I,EAAD,MACCrD,EACD5B,EAAA9D,EAAAC,cAACkJ,EAAD,KACErF,EAAA9D,EAAAC,cAAA,2FACA6D,EAAA9D,EAAAC,cAAA,WAAM6D,EAAA9D,EAAAC,cAAA,WAFR,+BAI8B6D,EAAA9D,EAAAC,cAAA,KAAG4J,KAAK,oCAAR,WAAsD/F,EAAA9D,EAAAC,cAAA,WAAM6D,EAAA9D,EAAAC,cAAA,WAExF6D,EAAA9D,EAAAC,cAAA,mCAA0B6D,EAAA9D,EAAAC,cAAA,KAAG4J,KAAK,yCAAR,QAA1B,QAAuF/F,EAAA9D,EAAAC,cAAA,KAAG4J,KAAK,wCAAR,OAAvF,OAAiJ/F,EAAA9D,EAAAC,cAAA,KAAG4J,KAAK,0CAAR,UANnJ,IAMuN/F,EAAA9D,EAAAC,cAAA,WANvN,2CAO+C6D,EAAA9D,EAAAC,cAAA,eArBvDwJ,KAAAK,KA6BaT,IAEfA,EAAO9E,UAAY,CACjBmB,SAAUlB,IAAUmB,UAAU,CAACnB,IAAUI,MAAOJ,IAAUoB,OAAOlB,WACjE4E,UAAW9E,IAAU+D,MAGvBc,EAAOb,aAAe,CACpBc,WAAW,GCvPb,IAAMlE,EAAUjG,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGJ,CAAH,0EAOPD,EAAUC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGJ,CAAH,iCACE,SAAAK,GAAK,OAAIA,EAAMC,MAAM+F,WAI9BuE,EAAO5K,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,+DAIG,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAKC,QAIxC4I,EAAO7K,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAGJ,CAAH,iGAMG,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAKC,QAIxC6I,EAAW,SAAA7G,GAAA,IAAG8G,EAAH9G,EAAG8G,KAAMC,EAAT/G,EAAS+G,KAAT,OACfrG,EAAA9D,EAAAC,cAACmK,EAAD,KACEtG,EAAA9D,EAAAC,cAACoK,EAAD,KACGH,GACCpG,EAAA9D,EAAAC,cAAC+J,EAAD,KACElG,EAAA9D,EAAAC,cAAA,0BAAuB6D,EAAA9D,EAAAC,cAAA,WACvB6D,EAAA9D,EAAAC,cAAC8D,EAAA,KAAD,CAAM1D,GAAI6J,EAAKI,OAAO/G,MAAO2G,EAAK5D,YAAYpG,QAIjDiK,GACCrG,EAAA9D,EAAAC,cAAC8J,EAAD,KACEjG,EAAA9D,EAAAC,cAAA,8BAA2B6D,EAAA9D,EAAAC,cAAA,WAC3B6D,EAAA9D,EAAAC,cAAC8D,EAAA,KAAD,CAAM1D,GAAI8J,EAAKG,OAAO/G,MAAO4G,EAAK7D,YAAYpG,WAOzC+J,IAEfA,EAAS1F,UAAY,CACnB2F,KAAM1F,IAAU8D,OAChB6B,KAAM3F,IAAU8D,QAGlB2B,EAASzB,aAAe,CACtB0B,KAAM,KACNC,KAAM,iBCxCOI,EAtBMpL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGJ,CAAH,iQACH,SAAAK,GAAK,OAAIA,EAAMC,MAAMwB,SAASC,OAIlC,SAAA1B,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAK0B,MAa1B,SAAArD,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,KAAKuH,aCZpCtD,EANCjG,IAAOC,IAAVC,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAGJ,CAAH,iFAEgC,SAAAK,GAAK,OAAIA,EAAMC,MAAM+F,WCJlEnH,EAAAmM,EAAAjM,EAAA,sBAAAkM,IAAApM,EAAAmM,EAAAjM,EAAA,sBAAAmM,IAAArM,EAAAmM,EAAAjM,EAAA,sBAAAoM,IAAAtM,EAAAmM,EAAAjM,EAAA,sBAAAqM,IAAAvM,EAAAmM,EAAAjM,EAAA,sBAAAsM,IAAAxM,EAAAmM,EAAAjM,EAAA,sBAAAuM,IAAAzM,EAAAmM,EAAAjM,EAAA,sBAAAoL,IAAAtL,EAAAmM,EAAAjM,EAAA,sBAAAyC,EAAA,IAAA3C,EAAAmM,EAAAjM,EAAA,sBAAAwM","file":"component---src-pages-contact-js-e0b9c1fb65bc1db06624.js","sourcesContent":["/* eslint jsx-a11y/label-has-for:0 */\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { Layout, Wrapper, Header, Button } from '../components'\n\nimport config from '../../config'\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\n    padding: 3rem 3rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\n    padding: 2rem 1.5rem;\n  }\n  form {\n    p {\n      label,\n      input {\n        display: block;\n      }\n      input {\n        min-width: 275px;\n        margin-top: 0.5rem;\n      }\n      textarea {\n        resize: vertical;\n        min-height: 150px;\n        width: 100%;\n        margin-top: 0.5rem;\n      }\n    }\n  }\n`\n\nconst Contact = () => (\n  <Layout>\n    <Wrapper>\n      <Helmet title={`Contact | ${config.siteTitle}`} />\n      <Header>\n        <Link to=\"/\">{config.siteTitle}</Link>\n      </Header>\n      <Content>\n        <h1>Contact</h1>\n        <p>Say something!</p>\n        <form name=\"contact-form\" method=\"post\" data-netlify=\"true\" data-netlify-honeypot=\"bot-field\" action=\"/success\">\n          <p>\n            <label htmlFor=\"contact-name\">\n              Name\n              <input name=\"name\" id=\"contact-name\" type=\"text\" required />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"contact-email\">\n              E-Mail <input name=\"email\" id=\"contact-email\" type=\"email\" required />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"contact-message\">\n              Your Message <textarea name=\"message\" id=\"contact-message\" required />\n            </label>\n          </p>\n          <p>\n            <Button>Send</Button>\n          </p>\n          <input type=\"hidden\" name=\"form-name\" value=\"contact-form\" />\n        </form>\n      </Content>\n    </Wrapper>\n  </Layout>\n)\n\nexport default Contact\n","import styled from 'styled-components'\n\nconst Subline = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  color: ${props => props.theme.colors.grey.light};\n  ${props => props.sectionTitle && 'margin-top: 0'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`\n\nexport default Subline\n","module.exports = {\n  pathPrefix: '/', // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"portfolio\"\n\n  siteTitle: 'the chronicles of code and ink in space', // Navigation and Site Title\n  siteTitleAlt: 'the chronicles of code and ink in space', // Alternative Site title for SEO\n  siteTitleManifest: 'the chronicles of code and ink in space',\n  siteUrl: 'https://code-ink-space.github.io', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteHeadline: 'an offshoot of: i blast code and ink into space', // Headline for schema.org JSONLD\n  siteBanner: '/social/code-ink-space-chronicles-banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/code-ink-space-favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'notes on tech, books and photography by a lifelong learner', // Your site description\n  author: 'Patrick', // Author for schemaORGJSONLD\n  siteLogo: '/social/code-ink-space-logo.png', // Image for schemaORGJSONLD\n\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@codeinkspace', // Twitter Username - Optional\n  ogSiteName: 'codeinkspace', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n  googleAnalyticsID: 'UA-133432246-3',\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#FFFFFF',\n  backgroundColor: '#2b2e3c',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\n\nimport Subline from './Subline'\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 2rem;\n  margin-bottom: 3.5rem;\n  padding-bottom: 3.5rem;\n  border-bottom 1px solid rgba(0,0,0,0.25);\n\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    padding-bottom: 2rem;\n    border-bottom 1px solid rgba(0,0,0,0.25);\n  }\n`\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n  a {\n    color: ${props => props.theme.colors.grey.dark};\n    &:hover {\n      color: ${props => props.theme.colors.primaryLight};\n    }\n    border-bottom: none;\n  }\n`\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`\n\nconst PostContent = styled.div`\n`\n\nconst Article = ({ title, date, body, excerpt, slug, timeToRead, categories, issue }) => {\n  const firstChar = title.charAt(0)\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; <b>Issue #{issue}</b> in{' '}\n        {categories.map((cat, i) => (\n          <React.Fragment key={cat}>\n            {!!i && ', '}\n            <Link to={`/volumes/${kebabCase(cat)}`}>{cat}</Link>\n          </React.Fragment>\n        ))}\n      </Subline>\n      <PostContent>\n            <MDXRenderer>{body}</MDXRenderer>\n      </PostContent>\n    </Post>\n  )\n}\n\nexport default Article\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  categories: PropTypes.array.isRequired,\n  issue: PropTypes.string.isRequired,\n}\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${props => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\n  color: ${props => props.theme.colors.white};\n  padding: ${props => (props.big ? '0.5rem 1.75rem' : '0.35rem 1.65rem')};\n  transition: all ${props => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${props => props.theme.colors.primaryLight};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: ${props => props.theme.colors.white};\n  }\n`\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { darken, lighten } from 'polished'\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`\n\nconst Content = styled.div`\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n\n  a {\n    color: ${props => props.theme.colors.white};\n    font-size: 1.2rem;\n    &:hover {\n      opacity: 0.85;\n      color: ${props => props.theme.colors.white};\n    }\n  }\n`\n\nconst Header = ({ children }) => (\n  <Wrapper>\n    <Content>{children}</Content>\n  </Wrapper>\n)\n\nexport default Header\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nimport config from '../../config'\n\nconst SEO = props => {\n  const { postNode, postPath, article, buildTime } = props\n\n  let title\n  let description\n\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix\n  const homeURL = `${config.siteUrl}${realPrefix}`\n  const URL = `${homeURL}${postPath || ''}`\n  const image = `${homeURL}${config.siteBanner}`\n\n  if (article) {\n    const postMeta = postNode.frontmatter\n    title = `${postMeta.title} | ${config.siteTitle}`\n    description = postNode.excerpt\n  } else {\n    title = config.siteTitleAlt\n    description = config.siteDescription\n  }\n\n  // schema.org in JSONLD format\n  // https://developers.google.com/search/docs/guides/intro-structured-data\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\n\n  const schemaOrgWebPage = {\n    '@context': 'http://schema.org',\n    '@type': 'WebPage',\n    url: URL,\n    headline: config.siteHeadline,\n    inLanguage: config.siteLanguage,\n    mainEntityOfPage: URL,\n    description: config.siteDescription,\n    name: config.siteTitle,\n    author: {\n      '@type': 'Person',\n      name: config.author,\n    },\n    copyrightHolder: {\n      '@type': 'Person',\n      name: config.author,\n    },\n    copyrightYear: '2018',\n    creator: {\n      '@type': 'Person',\n      name: config.author,\n    },\n    publisher: {\n      '@type': 'Person',\n      name: config.author,\n    },\n    datePublished: '2019-01-07T10:30:00+01:00',\n    dateModified: buildTime,\n    image: {\n      '@type': 'ImageObject',\n      url: image,\n    },\n  }\n\n  // Initial breadcrumb list\n\n  const itemListElement = [\n    {\n      '@type': 'ListItem',\n      item: {\n        '@id': homeURL,\n        name: 'Homepage',\n      },\n      position: 1,\n    },\n    {\n      '@type': 'ListItem',\n      item: {\n        '@id': `${homeURL}/contact`,\n        name: 'Contact',\n      },\n      position: 2,\n    },\n  ]\n\n  let schemaArticle = null\n\n  if (article) {\n    schemaArticle = {\n      '@context': 'http://schema.org',\n      '@type': 'Article',\n      author: {\n        '@type': 'Person',\n        name: config.author,\n      },\n      copyrightHolder: {\n        '@type': 'Person',\n        name: config.author,\n      },\n      copyrightYear: postNode.parent.birthtime,\n      creator: {\n        '@type': 'Person',\n        name: config.author,\n      },\n      publisher: {\n        '@type': 'Organization',\n        name: config.author,\n        logo: {\n          '@type': 'ImageObject',\n          url: `${homeURL}${config.siteLogo}`,\n        },\n      },\n      datePublished: postNode.parent.birthtime,\n      dateModified: postNode.parent.mtime,\n      description,\n      headline: title,\n      inLanguage: 'en',\n      url: URL,\n      name: title,\n      image: {\n        '@type': 'ImageObject',\n        url: image,\n      },\n      mainEntityOfPage: URL,\n    }\n    // Push current blogpost into breadcrumb list\n    itemListElement.push({\n      '@type': 'ListItem',\n      item: {\n        '@id': URL,\n        name: title,\n      },\n      position: 3,\n    })\n  }\n\n  const breadcrumb = {\n    '@context': 'http://schema.org',\n    '@type': 'BreadcrumbList',\n    description: 'Breadcrumbs list',\n    name: 'Breadcrumbs',\n    itemListElement,\n  }\n\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <meta name=\"gatsby-starter\" content=\"Gatsby Starter Minimal Blog\" />\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={URL} />\n      <meta property=\"og:type\" content={article ? 'article' : 'website'} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:image:alt\" content={description} />\n      {config.siteFBAppID && <meta property=\"fb:app_id\" content={config.siteFBAppID} />}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n      <meta name=\"twitter:image:alt\" content={description} />\n      {/* Insert schema.org data conditionally (webpage/article) + everytime (breadcrumbs) */}\n      {!article && <script type=\"application/ld+json\">{JSON.stringify(schemaOrgWebPage)}</script>}\n      {article && <script type=\"application/ld+json\">{JSON.stringify(schemaArticle)}</script>}\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumb)}</script>\n    </Helmet>\n  )\n}\n\nexport default SEO\n\nSEO.propTypes = {\n  postNode: PropTypes.object,\n  postPath: PropTypes.string,\n  article: PropTypes.bool,\n  buildTime: PropTypes.string,\n}\n\nSEO.defaultProps = {\n  postNode: null,\n  postPath: null,\n  article: false,\n  buildTime: null,\n}\n","import { lighten } from 'polished'\n\nconst colors = {\n  // primary: '#d02e77', // Color for buttons or links\n  primary: '#042A2B', // Color for buttons or links\n  primaryLight: lighten(0.05, '#5EB1BF'),\n  // bg: 'white', // Background color\n  bg: '#FCFCFC', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n  white: 'white',\n}\n\nconst transitions = {\n  normal: '0.5s',\n}\n\nconst fontSize = {\n  small: '0.9rem',\n}\n\nconst fontFamily = {\n  serif: `'Bitter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', serif`,\n  sansSerif: `'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica', 'Arial', sans-serif`,\n}\n\nconst breakpoints = {\n  tablet: '1200px',\n  phone: '600px',\n}\n\nconst theme = {\n  colors,\n  transitions,\n  fontSize,\n  breakpoints,\n  fontFamily,\n  maxWidth: '1000px',\n  baseFontSize: '18px',\n}\n\nexport default theme\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components'\n\nimport SEO from './SEO'\nimport theme from '../../config/theme'\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n  }\n  ::selection {\n    color: ${props => props.theme.colors.bg};\n    background: ${props => props.theme.colors.primary};\n  }\n  html {\n    font-family: ${props => props.theme.fontFamily.sansSerif};\n    font-size: ${props => props.theme.baseFontSize};\n    h1 {\n      font-size: 3.052rem;\n    }\n    h2 {\n      font-size: 2.441rem;\n    }\n    h3 {\n      font-size: 1.953rem;\n    }\n    h4 {\n      font-size: 1.563rem;\n    }\n    h5 {\n      font-size: 1.25rem;\n    }\n    @media (max-width: ${props => props.theme.breakpoints.phone}) {\n      font-size: 16px;\n      h1 {\n        font-size: 2.488rem;\n      }\n      h2 {\n        font-size: 2.074rem;\n      }\n      h3 {\n        font-size: 1.728rem;\n      }\n      h4 {\n        font-size: 1.444rem;\n      }\n      h5 {\n        font-size: 1.2rem;\n      }\n    }\n  }\n  body {\n    background: ${props => props.theme.colors.bg};\n    color: ${props => props.theme.colors.grey.default};\n  }\n  a {\n    color: ${props => props.theme.colors.primary};\n    text-decoration: none;\n    transition: all ${props => props.theme.transitions.normal};\n    border-bottom: 2px solid #042A2B;\n  }\n  a:hover {\n    color: ${props => props.theme.colors.primaryLight};\n  }\n  a:not([href]):not([tabindex]) {\n    color: inherit;\n    text-decoration: none;\n    &:hover,\n    &:focus {\n      color: inherit;\n      text-decoration: none;\n    }\n    &:focus {\n      outline: 0;\n    }\n  }\n  a.abutton {\n    border-bottom: none;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    color: ${props => props.theme.colors.grey.dark};\n    font-family: ${props => props.theme.fontFamily.serif};\n  }\n  blockquote {\n    font-style: italic;\n    position: relative;\n  }\n\n  blockquote:before {\n    content: \"\";\n    position: absolute;\n    background: ${props => props.theme.colors.primary};\n    height: 100%;\n    width: 6px;\n    margin-left: -1.6rem;\n  }\n  label {\n    margin-bottom: .5rem;\n    color: ${props => props.theme.colors.grey.dark};\n  }\n  input, textarea, button {\n    font-size: 1rem;\n  }\n  textarea {\n    font-family: ${props => props.theme.fontFamily.sansSerif};\n  }\n  input, textarea {\n    border-radius: .5rem;\n    border: none;\n    background: rgba(0, 0, 0, 0.05);\n    padding: .4rem 1rem;\n    &:focus {\n      outline: none;\n    }\n  }\n  pre {\n    margin-top: 0;\n    margin-bottom: 1rem;\n    overflow: auto;\n  }\n  figure {\n    margin: 0 0 1rem 0;\n  }\n  img {\n    vertical-align: middle;\n  }\n  [role='button'] {\n    cursor: pointer;\n  }\n  a,\n  area,\n  button,\n  [role='button'],\n  input,\n  label,\n  select,\n  summary,\n  textarea {\n    touch-action: manipulation;\n  }\n  table {\n    border-collapse: collapse;\n    background-color: ${props => props.theme.colors.bg};\n  }\n  caption {\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem;\n    color: ${props => props.theme.colors.color};\n    text-align: center;\n    caption-side: bottom;\n  }\n  th {\n    text-align: left;\n  }\n  fieldset {\n    min-width: 0;\n    padding: 0;\n    margin: 0;\n    border: 0;\n  }\n  legend {\n    display: block;\n    width: 100%;\n    padding: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1.5rem;\n    line-height: inherit;\n  }\n  input[type='search'] {\n    -webkit-appearance: none;\n  }\n  output {\n    display: inline-block;\n  }\n  svg:not(:root) {\n    overflow: hidden;\n    vertical-align: middle;\n  }\n  [hidden] {\n    display: none !important;\n  }\n  ul {\n    list-style-type: square;\n  }\n  li {\n    line-height: 3;\n  }\n  article p {\n    line-height: 3;\n  }\n  .image-caption {\n    font-style: italic;\n    display: inherit;\n    text-align: center;\n  }\n`\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 1rem;\n  span {\n    font-size: 0.75rem;\n  }\n`\n\nconst Layout = ({ children, customSEO }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          buildTime(formatString: \"YYYY-MM-DD\")\n        }\n      }\n    `}\n    render={data => (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          {!customSEO && <SEO buildTime={data.site.buildTime} />}\n          <GlobalStyle />\n          {children}\n          <Footer>\n            <small>code anything tech . ink a quote from a book . space for a memorable photo</small>\n            <br /><br />\n\n            new issues are published on <a href=\"https://twitter.com/codeinkspace\">Twitter</a><br /><br />\n\n            <strong>the chronicles of <a href=\"https://code-ink-space.gitlab.io/code\">code</a> and <a href=\"https://code-ink-space.gitlab.io/ink\">ink</a> in <a href=\"https://code-ink-space.gitlab.io/space\">space</a></strong> <br />\n            &copy; 2019 by Patrick. All rights reserved. <br />\n          </Footer>\n        </React.Fragment>\n      </ThemeProvider>\n    )}\n  />\n)\n\nexport default Layout\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n  customSEO: PropTypes.bool,\n}\n\nLayout.defaultProps = {\n  customSEO: false,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nconst Wrapper = styled.div`\n  grid-column: 1 / -1;\n  margin-left: 0;\n  margin-right: 0;\n  padding: 2rem 0 0 0;;\n`\n\nconst Content = styled.div`\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`\n\nconst PrevNext = ({ next, prev }) => (\n  <Wrapper>\n    <Content>\n      {next && (\n        <Next>\n          <span>Next Issue</span><br/>\n          <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\n        </Next>\n      )}\n\n      {prev && (\n        <Prev>\n          <span>Previous Issue</span><br/>\n          <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\n        </Prev>\n      )}\n    </Content>\n  </Wrapper>\n)\n\nexport default PrevNext\n\nPrevNext.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n}\n\nPrevNext.defaultProps = {\n  next: null,\n  prev: null,\n}\n","import styled from 'styled-components'\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 2rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`\n\nexport default SectionTitle\n","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(280px, ${props => props.theme.maxWidth}) 1fr;\n  padding: 0 1rem;\n`\n\nexport default Wrapper\n","import Article from './Article'\nimport Button from './Button'\nimport Header from './Header'\nimport Layout from './Layout'\nimport PrevNext from './PrevNext'\nimport SectionTitle from './SectionTitle'\nimport SEO from './SEO'\nimport Subline from './Subline'\nimport Wrapper from './Wrapper'\nimport PastIssues from './Wrapper'\n\nexport { Article, Button, Header, Layout, PrevNext, SectionTitle, SEO, Subline, Wrapper, PastIssues }\n"],"sourceRoot":""}