{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Started watching `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Brooklyn Nine-Nine`), ` and `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Hilda`), ` on Netflix. Better late than never.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components,\n      props: {\n        \"id\": \"code\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h3\",\n      props: {\n        \"href\": \"#code\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }\n    }), `<`, `/code`, `>`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.thetvdb.com/\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }\n    }, `TheTVDB`), ` signup to add `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"li\"\n    }, `Sana Maulit Muli`), ` to Trakt.tv.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `No DD-WRT OpenVPN support for my old Linksys WRT54G2 v1.0 router:`, React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `\"It only has a 2MB flash, you won't get anything bigger than micro on it.\" - `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://forum.dd-wrt.com/phpBB2/viewtopic.php?t=141543&highlight=wrt54g2+openvpn\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }\n    }, `dd-wrt forum`)))), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Netflix blocks ProtonVPN connection. Windscribe restricts mobile hotspot feature to paid users only, it seems. Back to Getflix DNS setup on PLDT router but with Netflix US still disabled.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `HBO Go on Roku is only for US. No `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://hbogoasia.ph\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }\n    }, `HBO GO Asia`), ` Roku channel. But I now have access to complete Game of Thrones and all live HBO TV channels! Watching on iPad. Still have some use for SkyCable after all.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Reset Windows Firewall to defaults for Emby on Roku to work. Thanks `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://emby.media/community/index.php?/topic/50824-cannot-connect-to-server/\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }\n    }, `Emby forum`), `.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Amazon Prime Video 30-day free trial signup (also activated on Roku) just to watch `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.imdb.com/title/tt0075520\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }\n    }, `Jesus of Nazareth (1977)`), `. So much more selections than Netflix PH because it's Prime Video US and Getflix gives it even on trial.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.demonoid.info/commemoration/index.html\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }\n    }, `Deimos 1980 - 2018`), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, ` You will be forever missed!\nDemonoid April 21, 2003 - September 17, 2018\nOur comeback kid Demonoid will now rest after years of fighting along with his father.\nWith great sadness we want to announce that Deimos, the owner of Demonoid has died on August, 2018 at age of 38.`)))), React.createElement(\"br\", null), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components,\n      props: {\n        \"id\": \"ink\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h3\",\n      props: {\n        \"href\": \"#ink\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }\n    }), React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"h3\"\n    }, `\"ink\"`)), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `Use what talent you possess: the woods would be very silent if no birds sang except those that sang best.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `—`, ` Henry van Dyke in `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `365 Days of Wonder: Mr. Browne's Book of Precepts`), ` (2014) by R.J. Palacio`)), React.createElement(\"br\", null), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components,\n      props: {\n        \"id\": \"space\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h3\",\n      props: {\n        \"href\": \"#space\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }\n    }), `*`, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"h3\"\n    }, `space`), `*`), React.createElement(\"p\", {\n      className: \"image-caption\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"img\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"src\": \"/gifs/spacex-falcon-heavy-boosters-landing-cape-canaveral.gif\",\n        \"alt\": \"SpaceX Falcon Heavy's boosters landing in Cape Canaveral - Image Credit & Copyright: @bananaramas gfycat\",\n        \"title\": \"SpaceX Falcon Heavy's boosters landing in Cape Canaveral\"\n      }\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.reddit.com/r/space/comments/bcwzp6/falcon_heavys_boosters_landing_in_cape_canaveral/\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }\n    }, `SpaceX Falcon Heavy's boosters landing in Cape Canaveral`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `(okay, technically not a photo but still picture perfect)`)));\n  }\n\n}"},"excerpt":"Started watching  Brooklyn Nine-Nine  and  Hilda  on Netflix. Better late than never. < /code > TheTVDB  signup to add  Sana Maulit Muli  to…","frontmatter":{"title":"Use what talent you possess...","date":"April 21st","categories":["Volume I (2019)"],"issue":12},"timeToRead":1,"parent":{"__typename":"File","mtime":"2019-10-22T21:36:29.271Z","birthtime":"2019-10-22T21:36:29.271Z"}}},"pageContext":{"slug":"/use-what-talent-you-possess","prev":{"fields":{"slug":"/life-can-only-be-understood-backwards-blackhole"},"frontmatter":{"title":"Life can only be understood backwards... #blackhole","categories":["Volume I (2019)"]}},"next":{"fields":{"slug":"/to-be-a-man-is-to-suffer-for-others"},"frontmatter":{"title":"To be a man is to suffer for others...","categories":["Volume I (2019)"]}}}}